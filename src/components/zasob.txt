import React, { useEffect } from 'react';
import { createChart, PriceLineOptions, Time, LineSeriesData } from 'lightweight-charts';

const BitcoinChart: React.FC = () => {
  useEffect(() => {
    const chartOptions = {
      layout: {
        textColor: 'black',
        background: { type: 'solid', color: 'white' },
      },
    };

    const container = document.getElementById('container');
    if (!container) return;

    const chart = createChart(container, chartOptions);

    const series = chart.addLineSeries({
      color: '#2962FF',
      lineWidth: 2,
      lastValueVisible: false,
      priceLineVisible: false,
    });

    const data: LineSeriesData[] = [
      { time: { year: 2018, month: 1, day: 1 } as Time, value: 27.58405298746434 },
    ];
    series.setData(data);

    let minimumPrice = data[0].value;
    let maximumPrice = minimumPrice;

    for (let i = 1; i < data.length; i++) {
      const price = data[i].value;
      if (price > maximumPrice) {
        maximumPrice = price;
      }
      if (price < minimumPrice) {
        minimumPrice = price;
      }
    }

    const avgPrice = (maximumPrice + minimumPrice) / 2;

    const lineWidth = 2;

    const minPriceLine: PriceLineOptions = {
      price: minimumPrice,
      color: '#ef5350',
      lineWidth: lineWidth,
      lineStyle: 2, // LineStyle.Dashed
      axisLabelVisible: true,
      title: 'min price',
    };

    const avgPriceLine: PriceLineOptions = {
      price: avgPrice,
      color: 'black',
      lineWidth: lineWidth,
      lineStyle: 1, // LineStyle.Dotted
      axisLabelVisible: true,
      title: 'ave price',
    };

    const maxPriceLine: PriceLineOptions = {
      price: maximumPrice,
      color: '#26a69a',
      lineWidth: lineWidth,
      lineStyle: 2, // LineStyle.Dashed
      axisLabelVisible: true,
      title: 'max price',
    };

    series.createPriceLine(minPriceLine);
    series.createPriceLine(avgPriceLine);
    series.createPriceLine(maxPriceLine);

    chart.timeScale().fitContent();

    // Clean up on unmount
    return () => {
      chart.remove();
    };
  }, []);

  return <div id="container" style={{ width: '100%', height: '500px' }}></div>;
};

export default BitcoinChart;
